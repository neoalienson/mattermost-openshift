apiVersion: v1
kind: Template
metadata:
  name: mattermost
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APPLICATION_NAME}-from-src
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: centos
  spec:
    dockerImageRepository: docker.io/centos
- kind: ImageStream
  apiVersion: v1
  metadata:
    description: "This is a GO1.6 builder"
    name: "s2i-go-16"
  spec:
    dockerImageRepository: "goern/go-16-centos7"
  tags:
    - name: "latest"
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-docker
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      git:
        uri: https://github.com/goern/mattermost-openshift
        httpProxy: 'http://10.144.76.10:8080'
        httpsProxy: 'http://10.144.76.10:8080'
        ref: "centos7"
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: centos:latest
      type: Docker
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "mattermost-s2i"
    annotations:
      description: "Defines how to build the mattermost platform"
  spec:
    completionDeadlineSeconds: 480
    source:
      type: "Git"
      git:
        uri: "https://github.com/mattermost/platform.git"
        httpProxy: 'http://10.144.76.10:8080'
        httpsProxy: 'http://10.144.76.10:8080'
    strategy:
      type: "Source"
      sourceStrategy:
        from:
          kind: "ImageStreamTag"
          name: "s2i-go-16:latest"
    output:
      to:
        kind: "ImageStreamTag"
        name: "mattermost-from-src:latest"
    triggers:
      - type: "ImageChange"
      - type: "ConfigChange"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    selector:
      name: ${APPLICATION_NAME}
    replicas: 1
    template:
      metadata:
        labels:
          name: ${APPLICATION_NAME}
      spec:
        containers:
        - image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8065
          env:
          - name: DRIVER_NAME
            value: mysql
          - name: DATABASE_SERVICE_NAME
            value: ${DATABASE_SERVICE_NAME}
          - name: MYSQL_USER
            value: ${MYSQL_USER}
          - name: MYSQL_PASSWORD
            value: ${MYSQL_PASSWORD}
          - name: MYSQL_DATABASE
            value: ${MYSQL_DATABASE}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8065-tcp
      port: 8065
      protocol: TCP
      targetPort: 8065
    selector:
      deploymentconfig: ${APPLICATION_NAME}
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${DATABASE_SERVICE_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- kind: Route
  apiVersion: v1
  metadata:
    name: "frontend"
    labels:
      app: "mattermost"
  spec:
    host: ""
    to:
      kind: "Service"
      name: "${APPLICATION_NAME}"
    tls:
      termination: edge
parameters:
- name: APPLICATION_NAME
  required: true
  value: mattermost
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 512Mi
- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: mysql
- description: Username for MySQL user that will be used for accessing the database.
  displayName: MySQL User
  from: user[A-Z0-9]{3}
  name: MYSQL_USER
  required: true
  value: mmuser
- description: Password for the MySQL user.
  displayName: MySQL Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_PASSWORD
  required: true
  value: mostest
- description: Name of the MySQL database accessed.
  displayName: MySQL Database Name
  name: MYSQL_DATABASE
  required: true
  value: mattermost_test
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 512Mi
